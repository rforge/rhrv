% !Rnw root = completing.Rnw
All the nonlinear functions presented in \ref{sec:quickNL} used as example
file an RR time series generated synthetically from a nonlinear process. In
this section we will deal with a real RR time series and we will present all the
remaining nonlinear functions.\\

The example file ``example2.beats" that we shall use in the next sections
can be downloaded from the project's website
\href{http://rhrv.r-forge.r-project.org/}. The file was obtained from an ECG
of one of the authors of the \textit{RHRV} package and thus we expect
the file to be from a healthy subject!\\

<<RRnormal>>=
hrv.data = CreateHRVData( )
hrv.data = SetVerbose(hrv.data,FALSE)
hrv.data = LoadBeatAscii(hrv.data, 
                         RecordName="example2.beats",
                         RecordPath="beatsFolder")
hrv.data = BuildNIHR(hrv.data)
hrv.data = FilterNIHR(hrv.data)
hrv.data = InterpolateNIHR (hrv.data, freqhr = 4)
hrv.data = CreateNonLinearAnalysis(hrv.data)
@

First of all, we should run the nonlinearity tests in order to make sure that
the time series shows some degree of nonlinearity. We leave the test to the 
reader. Now, we shall estimate both time lag and embedding dimension parameters
of our new RR time series. As always, we first estimate
the time lag. The autocorrelation function used for the computations is shown
in Figure \ref{fig:autocorrReal}.\\

<<timeLagReal,fig=TRUE,pdf=TRUE, include=FALSE>>=
kTimeLag = CalculateTimeLag(hrv.data, method = "first.minimum",
                 lagMax = 800)
@

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{figure}[h]
  \centering
  \includegraphics[width=0.6\textwidth]{figures/tutorial-timeLagReal}
  \caption{Autocorrelation function for the RR time series.
  \label{fig:autocorrReal}}
\end{figure}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
We can appreciate that there is quite autocorrelation in the time series even 
for large time lag values. Although our estimation is reasonable it may happen
that  some RR series have their ``optimum" time lag at $100$ or even more. 
However, in most \gls{HRV} publications, the time
lag value is not usually selected above 10 or 15. \\

Now, we may try to obtain an estimation of the embedding dimension (see Figure
 \ref{fig:embeddingReal}):
<<embeddingDimReal,fig=TRUE, pdf = TRUE, include=FALSE>>=
kEmbeddingDim = CalculateEmbeddingDim(hrv.data,
                                      numberPoints = 10000, 
                                      timeLag = kTimeLag, 
                                      maxEmbeddingDim = 18)
@
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{figure}[h]
  \centering
  \includegraphics[width=0.6\textwidth]{figures/tutorial-embeddingDimReal}
  \caption{Automatic estimation of the embedding dimension.
  \label{fig:embeddingReal}}
\end{figure}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsubsection{Nonlinear noise reduction}
Since the RR intervals are derived from an \gls{ECG}, the RR time series
may suffer from discretization problems. If the \gls{ECG} was discretized very
coarsely, many RR intervals shall have the same value. Thus, there will be
several identical points in phase space, which may bias the nonlinear 
algorithms. \textit{RHRV} provides functionality that addresses those
situations in which the ECG was discretized very coarsely. In order to deal
with the discretization problem of the RR time series, 
\textit{RHRV} provides the \textit{NonLinearNoiseReduction} function. This 
function adds uniform white noise of a magnitude equal to the 
resolution of the RR intervals. If the ECG from which the RR intervals were 
derived was sampled at $f_s$ Hz, uniform $[-0.5,0.5]/f_s$ white noise is added.
Then, a nonlinear noise reduction algorithm is applied. The noise reduction
algorithm performs noise reduction by averaging each Takens' vector in an 
m-dimensional space with his neighbours (time lag=1). Each neighbourhood is
specified with balls of a given radius (max norm is used). Although 
this procedure will certainly not solve the discretization problem,
it will alleviate it:\\
 
<<NonLinearNoiseReduction,fig=TRUE,pdf=TRUE,eps=FALSE,include=FALSE>>=
hrv.data = NonLinearNoiseReduction(hrv.data, embeddingDim = kEmbeddingDim)                            
@

Additional parameters for the \textit{NonLinearNoiseReduction} function are
\textit{ECGsamplingFreq}: the \gls{ECG} sampling frequency  (optionally. But it 
can improve the performance of the algorithm) and \textit{radius}: 
The radius used to looking for neighbours in the phase space.\\

\subsubsection{Generalized correlation dimensions\label{seq:genCD}}
Section \ref{seq:corrDimTheo} presented the \textit{CalculateCorrDim}, 
\textit{EstimateCorrDim} and \textit{PlotCorrDim} for computing the embedding
dimension of an RR time series. These functions can also be used for computing
the generalized correlation dimension. The user only has to specify the order 
of the correlation dimension
with the \textit{corrOrder} parameter in the \textit{CalculateCorrDim} (the 
default is $2$, the correlation dimension). The order must fulfill 
\textit{corrOrder > 1}. The generalized correlation dimension of order $q$ is
known as the information dimension, that is computed with the
\textit{CalculateInfDim} function (see section \ref{seq:infDimAdv}. \\
 
As a quick example, we will try to  calculate the correlation dimension of
order 4 for our new \textit{hrv.data}. Figures \ref{fig:genCorrDim}
and \ref{fig:genCorrDimEst} shows the
results of the correlation sum computation and the estimation, respectively. 
<<genCorrDim,fig=TRUE,pdf=TRUE,eps=FALSE,include=FALSE>>=
hrv.data = CreateNonLinearAnalysis(hrv.data)
my.index = 1
hrv.data = CalculateCorrDim(hrv.data, 
                            indexNonLinearAnalysis = my.index, 
                            minEmbeddingDim = kEmbeddingDim - 2,
                            maxEmbeddingDim = kEmbeddingDim + 2,
                            timeLag = kTimeLag, minRadius = 1,
                            maxRadius = 200, pointsRadius = 100, 
                            theilerWindow = 20, doPlot = TRUE,
                            corrOrder = 4)
@
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{figure}[h]
  \centering
  \includegraphics[width=0.6\textwidth]{figures/tutorial-genCorrDim}
  \caption{Generalized correlation dimension computations.\label{fig:genCorrDim}}
\end{figure}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

<<genCorrDimEst,fig=TRUE,pdf=TRUE,eps=FALSE,include=FALSE>>=
hrv.data = EstimateCorrDim(hrv.data, indexNonLinearAnalysis = 1,
                            regressionRange=c(2*10^5,5*10^5)^(1/3),
                            useEmbeddings = 12:14)
                  
@
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{figure}[h]
  \centering
  \includegraphics[width=0.6\textwidth]{figures/tutorial-genCorrDimEst}
  \caption{Generalized correlation dimension estimation.\label{fig:genCorrDimEst}}
\end{figure}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\subsubsection{Information dimension\label{seq:infDimAdv}}
As seen in section ref{seq:infDimTheory} the information dimension is a
particular case of the generalized correlation 
dimension when setting the order $q = 1$. In the \textit{RHRV} package,
the information dimension is computed using the \textit{CalculateInfDim}, 
\textit{EstimateInfDim} and \textit{PlotInfDim}.\\

Since the \textit{EstimateInfDim} and \textit{PlotInfDim} are analogous to the
\textit{EstimateCorrDim} and \textit{PlotCorrDim} functions, we shall only 
review the \textit{CalculateInfDim} function.\\

In section \ref{seq:infDimTheory} we introduced the method for estimating
the information dimension in practical applications. This algorithm looks for
the scaling behaviour of the the average radius that contains a given portion 
(a "fixed-mass") of the total points in the phase space. By performing
a linear regression of $\log(p)\;Vs.\;\log(<r>)$ (being $p$ the fixed-mass of 
the total points), an estimate of the information dimension ($D_1$) is
obtained.\\

It must be noted that the calculations for the information dimension are 
heavier than those needed for the correlation dimension. Thus, 
\textit{EstimateCorrDim} only explores one embedding dimension. However, 
the user should run the method for different embedding dimensions for checking
if $D_1$ saturates. For the sake of simplicity, we just run the example
for one embedding dimension:\\

<<infDim,fig=TRUE,pdf=TRUE,eps=FALSE,include=FALSE>>=
my.index = 1
hrv.data = CalculateInfDim(hrv.data,
                           indexNonLinearAnalysis=my.index,
                           embeddingDim=kEmbeddingDim,
                           timeLag=kTimeLag,
                           minFixedMass=2*10^-3,maxFixedMass=0.25,
                           numberFixedMassPoints=10,
                           radius=0.8,increasingRadiusFactor=1.05,
                           numberPoints=500, theilerWindow=100,
                           doPlot=TRUE)
@
Figure \ref{fig:infDim} shows $<\log p(r)>$ Vs. $\log(r)$ as obtained from the
\textit{CalculateInfDim} function. As usual, we may use the \textit{Estimate} 
function (\textit{EstimateInfDim} function) in order to obtain the estimation
and then accessing it using \$ under the \textit{statistic} field.\\
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{figure}[h]
  \centering
  \includegraphics[width=0.6\textwidth]{figures/tutorial-infDim}
  \caption{Information dimension computations in \textit{RHRV}.\label{fig:infDim}}
\end{figure}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

<<infDimEstimation,fig=TRUE,pdf=TRUE,eps=FALSE,include=FALSE>>=
hrv.data = EstimateInfDim(hrv.data,
                           indexNonLinearAnalysis=my.index,
                           regressionRange=c(0.0025,0.100), 
                           doPlot=TRUE)


cat("The information dimension is ",
    hrv.data$NonLinearAnalysis[[my.index]]$infDim$statistic,"\n")
@

Figure \ref{fig:infDimEstimation} shows the regression performed for obtaining the 
estimate of the information dimension.\\

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{figure}[h]
  \centering
  \includegraphics[width=0.6\textwidth]{figures/tutorial-infDimEstimation}
  \caption{Information dimension estimation.\label{fig:infDimEstimation}}
\end{figure}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


% 
\subsubsection{Poincar\'{e} Plot\label{seq:poincarePlot}}
The \textit{PoincarePlot} function implements all the functionality for 
performing Poincar\'{e} plot analysis. Whether you employ the ``classical" 
calculation methods or those based on confidence regions (see section
\ref{seq:poincareTheory}). \\

In order to compute the ``classic" $SD_1$ and $SD_2$
parameters in the Poincar\'{e} plot, 
the most important arguments of the \textit{RHRV} routine are the 
\textit{timeLag} ($\tau$ in the theoretic section: \ref{seq:poincareTheory}) 
and \textit{doPlot} (if TRUE, the Poincar\'{e} plot is shown). The following
lines illustrate the use of this function. The resulting Poincar\'{e} plot is 
shown in Figure \ref{fig:poincare}. \\

<<Poincare,fig=TRUE,pdf=TRUE,eps=FALSE,include=FALSE>>=
hrv.data = PoincarePlot(hrv.data,
                         indexNonLinearAnalysis=1,
                         timeLag=1, doPlot=TRUE)
@
 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{figure}[h]
  \centering
  \includegraphics[width=0.85\textwidth]{figures/tutorial-Poincare}
  \caption{Poincar\'{e} Plot.\label{fig:poincare}}
\end{figure}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%5

Figure \ref{fig:poincare} shows the resulting Poincar\'{e} plot. We may 
appreciate that the fit could be improved. For this reason, \textit{RHRV}
provides functionality for fitting the ellipse (and computing both 
$SD_1$ and $SD_2$ parameters) using the theory of the
confidence regions. In order to enable the confidence region estimation the user
can set \textit{confidenceEstimation = TRUE}. The confidence level can be 
selected with the \textit{confidence} paramter (default:0.95). It must be noted
that when \textit{timeLag > 1}, the confidence region approach is always used.\\

Figure \ref{fig:poincareConfidence} shows the result of applying the
following piece of code:

<<PoincareConfidence,fig=TRUE,pdf=TRUE,eps=FALSE,include=FALSE>>=
hrv.data = CreateNonLinearAnalysis(hrv.data)
hrv.data = PoincarePlot(hrv.data,
                         indexNonLinearAnalysis=2,
                         timeLag=1, confidenceEstimation = TRUE,
                         confidence = 0.95,
                         doPlot=TRUE)
@
 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{figure}[h]
  \centering
  \includegraphics[width=0.85\textwidth]{figures/tutorial-PoincareConfidence}
  \caption{Poincar\'{e} Plot.\label{fig:poincareConfidence}}
\end{figure}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The $SD_1$ and $SD_2$ parameters are stored under the
\textit{hrv.data\$NonLinearAnalysis[[index]]\$PoincarePlot} list that may be
accessed as usual:

<<AccessingData>>=
# results of the first fit ...
print(hrv.data$NonLinearAnalysis[[1]]$PoincarePlot)
# ... vs results of the second one
print(hrv.data$NonLinearAnalysis[[2]]$PoincarePlot)

@

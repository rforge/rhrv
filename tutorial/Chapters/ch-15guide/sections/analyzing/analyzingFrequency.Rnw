% !Rnw root = analyzing.Rnw
A major part of the functionality of the RHRV package is dedicated to the 
spectral analysis of \gls{HR} signals. Before performing the frequency 
analysis, a data analysis structure must be created. Such structure shall store 
the information extracted from a variability analysis of the \gls{HR} signal as 
a member of the \textit{FreqAnalysis} list, under the \textit{HRVData} 
structure. Each analysis structure created is identified by a unique number (in 
order of creation). To create such  an analysis structure, the 
\textit{CreateFreqAnalysis} function is  used. \\
<<creatingFreq,results=verbatim>>=
hrv.data = CreateFreqAnalysis(hrv.data)
@
Notice that, if verbose mode is on, the \textit{CreateFreqAnalysis} function 
informs us about
the number of frequency analysis structures that have been created. In order to 
select a 
particular spectral analysis, we will use the \textit{indexFreqAnalysis} 
parameter in the 
frequency analysis functions.\\

The most important function to perform spectral \gls{HRV} analysis is the 
\textit{CalculatePowerBand} function. The \textit{CalculatePowerBand} computes 
the
spectrogram of the \gls{HR} series in the \gls{ULF},
\gls{VLF}, \gls{LF} and \gls{HF} frequency bands using STFT or wavelets. 
Boundaries of the bands may be chosen 
by the user. If boundaries are not specified, default values 
are used: ULF, $\left[ 0,0.03\right] $ Hz;
VLF, $\left[ 0.03,0.05\right] $ Hz;  LF, $\left[ 0.05,0.15\right] $ Hz; HF, $%
\left[ 0.15,0.4\right] $ Hz. 
 The type of analysis can be selected by the user by specifying the 
\textit{type} parameter of the 
\textit{CalculatePowerBand} function. The possible options are either 
\textit{``fourier"} or \textit{``wavelet"}. Because of the backwards 
compatibility,
the default value for this parameter is \textit{``fourier"}. \\

\subsubsection{Fourier} When using the \gls{STFT} to compute the spectrogram 
using the \textit{CalculatePowerBand} function, the user may specify the 
following parameters related with the \gls{STFT}:
\begin{itemize}
\item \textit{Size}: the size of window for calculating the spectrogram 
measured in seconds. The RHRV package employs a Hamming window to perform the 
\gls{STFT}.
\item \textit{Shift}: the displacement of window for calculating the 
spectrogram measured in seconds.
\item \textit{Sizesp}: the number of points for calculating each window of the 
\gls{STFT}. Thus, it is highly recommended to select \textit{sizesp} so that 
$sizesp=2^N$. If the user does not specify it, the program selects a proper
length for the calculations.
\end{itemize}
When using \textit{CalculatePowerBand}, the \textit{indexFreqAnalysis} 
parameter (in order to indicate which spectral analysis we are we working with) 
and the boundaries of the frequency bands may also be specified.\\

As an example, let's perform a frequency analysis in the typical \gls{HRV} 
spectral bands based on the \gls{STFT} . We may select 300 s (5 minutes) and 30 
s as window size and  displacement
values because these are typical values when performing \gls{HRV} spectral 
analysis. The value of the zero-padding should be chosen so that is greater 
than the number of samples of the window size. Assuming that the sampling 
frequency is $4\;Hz$, the zero-padding value must fulfill $sizesp \geq 
size\cdot f_s$. In this occasion, we select the smallest power of $2$ that 
meets the previous condition: $sizesp = 2048 = 2^{11} > 1200 = 300\cdot4$. 
Thus, we may write:
<<STFTanalysis,results=verbatim>>=
hrv.data = CreateHRVData( )
hrv.data = SetVerbose(hrv.data,FALSE)
hrv.data = LoadBeatAscii(hrv.data,"example.beats","beatsFolder")
hrv.data = BuildNIHR(hrv.data)
hrv.data = FilterNIHR(hrv.data)
hrv.data = InterpolateNIHR (hrv.data, freqhr = 4)
hrv.data = CreateFreqAnalysis(hrv.data)
hrv.data = SetVerbose(hrv.data,TRUE)
# Note that it is not necessary to write the boundaries 
# for the frequency bands, since they match
# the default values
hrv.data = CalculatePowerBand( hrv.data , indexFreqAnalysis= 1,
size = 300, shift = 30, sizesp = 2048, type = "fourier",
ULFmin = 0, ULFmax = 0.03, VLFmin = 0.03, VLFmax = 0.05,
 LFmin = 0.05, LFmax = 0.15, HFmin = 0.15,   HFmax = 0.4 )
@
Alternatively, we could not specify the \textit{sizesp} parameter and let the 
program decide for us. In fact, the program would use the same criteria that we 
used
in the previous example. Thus, we could have used the following sentence to 
obtain exactly the same results:
<<STFTanalysis2,results=verbatim,eval=FALSE>>=
hrv.data = CalculatePowerBand( hrv.data , indexFreqAnalysis= 1,
size = 300, shift = 30 )
@
\subsubsection{Wavelets} When using Wavelet analysis with the 
\textit{CalculatePowerBand} function, the user may specify:  
\begin{itemize}
\item \textit{Wavelet}: Mother wavelet used to calculate the spectrogram. Some 
of the most widely used Wavelets are available: Haar (``haar"), extremal phase 
(``d4", ``d6", ``d8" and ``d16") and the least asymmetric (``la8", ``la16" and 
``la20") Daubechies and the best localized (``bl14" and ``bl20") Wavelets among 
others. The default value is ``d4". The name of the wavelet specifies the 
``family" (the family determines the shape of the Wavelet and its properties) 
and the length of the wavelet. For example, ``la8" belongs to the Least 
Asymmetric family and has a length of 8 samples. We may give a simple advice 
for wavelet selection based on the wavelet's length: shorter wavelets usually 
have better temporal resolution, but worse frequency resolution. On the other 
hand, longer wavelets usually have worse temporal resolution, but they provide 
better frequency resolution. Better temporal resolution means that we can study 
shorter time intervals. On the other hand, a better frequency resolution means 
better ``frequency discrimination". That is, shorter wavelets will tend to fail 
when discriminating close frequencies.

\item \textit{Bandtolerance}: Maximum error allowed when the Wavelet-based 
analysis is performed \cite{waveletBiosignals}, \cite{waveletArticle}. It can 
be specified as an absolute or a relative error depending on the 
\textit{``relative"} parameter value. Default value is $0.01$. 
\item \textit{Relative}: Logic value specifying which type of band tolerance 
shall be used: relative (in percentage) or absolute (default value). 
\end{itemize}
Let $[f_l,f_u]$ be any frequency band specified by the user and let $[f_1,f_2]$ 
be a frequency interval associated with some node in the \linebreak 
\gls{MODWPT} tree \cite{percival2006}. The relative error $\epsilon_r$ of $f_l$ 
over the $[f_1,f_2]$ interval is computed as 
$$\epsilon_r=\Big|\frac{f_l-f_1}{f_u-f_l}\Big|\cdot100\%.$$
Similarly, we may define the error $\epsilon_r$ of the upper frequency $f_u$ as
 $$\epsilon_r=\Big|\frac{f_u-f_2}{f_u-f_l}\Big| \cdot100\%.$$
The relative error can be used to avoid introducing large errors at small 
frequency bands (usually both \gls{ULF} and \gls{VLF} bands).\\

The absolute value $\epsilon$ is defined as usual: $\epsilon=|f_2-f_u|$ for the 
upper frequency and $\epsilon=|f_1-f_l|$ for the lower frequency.\\

Let's analyze the same frequency bands as before but using the 
wavelet-algorithm. For the sake of simplicity, we will use an absolute 
tolerance of $0.01\;Hz$. We may select the least asymmetric Daubechies of width 
8 (``la8") as 
wavelet, since it provides a good compromise between frequency and time 
resolution. Thus, we may write:
<<waveletAnalysis,results=verbatim>>=
hrv.data = CreateHRVData( )
hrv.data = SetVerbose(hrv.data,FALSE)
hrv.data = LoadBeatAscii(hrv.data,"example.beats","beatsFolder")
hrv.data = BuildNIHR(hrv.data)
hrv.data = FilterNIHR(hrv.data)
hrv.data = InterpolateNIHR (hrv.data, freqhr = 4)
hrv.data = CreateFreqAnalysis(hrv.data)
hrv.data = SetVerbose(hrv.data,TRUE)
# Note that it is not necessary to write the boundaries
# for the frequency bands, since they match the default values
hrv.data = CalculatePowerBand( hrv.data , indexFreqAnalysis= 1,
 type = "wavelet", wavelet = "la8", bandtolerance = 0.01, relative = FALSE,
ULFmin = 0, ULFmax = 0.03, VLFmin = 0.03, VLFmax = 0.05,
 LFmin = 0.05, LFmax = 0.15, HFmin = 0.15,   HFmax = 0.4 )
@
\subsubsection{Creating several analyses} In the previous examples we have used 
just 1 frequency analysis to 
illustrate the basic use of \textit{CalculatePowerBand}. However, it is 
possible to create and use
the same \textit{HRVData} for performing several spectral analysis. When we do 
this, we use the parameter  "indexFreqAnalysis" to indicate which spectral 
analysis we are we working with. For example, we could perform both
Fourier and wavelet based analysis:
<<echo=FALSE>>=
hrv.data = CreateHRVData( )
hrv.data = SetVerbose(hrv.data,FALSE)
hrv.data = LoadBeatAscii(hrv.data,"example.beats","beatsFolder")
hrv.data = BuildNIHR(hrv.data)
hrv.data = FilterNIHR(hrv.data)
hrv.data = InterpolateNIHR (hrv.data, freqhr = 4)
@
<<bothAnalysis,results=verbatim>>=
# ...
# create structure, load beats, filter and interpolate
hrv.data = CreateFreqAnalysis(hrv.data)
hrv.data = SetVerbose(hrv.data,TRUE)
# use freqAnalysis number 1 for perfoming 
# Fourier analysis. This time, we do not
# write the band's boundaries
hrv.data = CalculatePowerBand( hrv.data , indexFreqAnalysis= 1,
size = 300, shift = 30, sizesp = 2048, type = "fourier")
# use freqAnalysis number 2 for perfoming 
# wavelet analysis. Note the indexFreqAnalysis = 2!!!
hrv.data = CreateFreqAnalysis(hrv.data)
hrv.data = CalculatePowerBand( hrv.data , indexFreqAnalysis= 2,
 type = "wavelet", wavelet = "la8", bandtolerance = 0.01, relative = FALSE)
@


\subsubsection{Plotting} RHRV also includes plotting utilities for representing 
the spectrogram of each frequency band: the \textit{PlotPowerBand} function. 
The {PlotPowerBand} receives as inputs the \textit{HRVData}
structure and the index of the frequency analysis that the user wants to 
plot(\textit{indexFreqAnalysis} argument). Optionally, the user can specify 
additional parameters for modifying the plots (whether to use or not normalized 
plots, specify the y-axis, etc.). For the sake of simplicity we will only use 
the \textit{ymax} parameter (for specifying the maximum y-axis of the power 
bands plot) and the \textit{ymaxratio} parameter
 (for specifying the maximum y-axis in the \textit{LF/HF} plot).\\

If we want to plot the power bands computed in the previous example, we may 
use: 
<<plottingFreqFourier,results=hide,echo=TRUE,fig=TRUE,include=FALSE,pdf = TRUE, eps = FALSE>>=
# Plotting Fourier analysis
PlotPowerBand(hrv.data, indexFreqAnalysis = 1, ymax = 200, ymaxratio = 1.7)
@
<<plottingFreqWavelet,results=hide,echo=TRUE,fig=TRUE,include=FALSE,pdf = TRUE, eps = FALSE>>=
# Plotting wavelet analysis
PlotPowerBand(hrv.data, indexFreqAnalysis = 2, ymax = 700, ymaxratio = 50)
@
The plots obtained with \textit{PlotPowerBand} are shown in Figures 
\ref{fig:examplePlotFourier} and \ref{fig:examplePlotWave}, respectively.

\begin{figure}[h]
\centering
\includegraphics{figures/tutorial-plottingFreqFourier}
\caption{Plot obtained with the \textit{PlotPowerBand} for the Fourier-based 
analysis.\label{fig:examplePlotFourier}}
\end{figure}
\begin{figure}[h]
\centering
\includegraphics{figures/tutorial-plottingFreqWavelet}
\caption{Plot obtained with the \textit{PlotPowerBand} for the Wavelet-based 
analysis.\label{fig:examplePlotWave}}
\end{figure}


\subsubsection{A brief comparison: Wavelets Vs. Fourier} Figures 
\ref{fig:examplePlotFourier} and \ref{fig:examplePlotWave} illustrate some of 
the most important differences between Fourier and wavelet-based analysis. The 
most important differences may be summarized as follows:
\begin{itemize}
\item The power range is not the same when using Fourier use that when using 
wavelets due
to the windowing used in both techniques. Thus, we
should avoid direct comparisons between the numerical results obtained with 
Fourier with those obtained using wavelets.
\item The Fourier's power spectrum is smoother that the wavelet's power 
spectrum. This is a consequence of the higher temporal resolution that the 
wavelet-based analysis provides. We could try to increase Fourier's
frequency resolution by decreasing the window' size used in the analysis. The 
shorter window we use, the sharper spectrum we get. Similarly, we can 
increase/decrease temporal resolution using shorter/larger wavelets when 
performing 
wavelet-based analysis.  
\item The power spectrum obtained from the Fourier-based analysis has a smaller 
number of samples than the original signal as a consequence of the use of 
windows. Conversely, the power spectrum obtained from the wavelet-based 
analysis has the same number of samples as the original $RR$ time series.
\end{itemize}
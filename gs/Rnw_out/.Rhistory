libraary(MASS)
library(MASS)
lm1d <- lm(temi~ dist, data=hills)
lm1d <- lm(time~ dist, data=hills)
lm1dc <- lm(time~ dist+ climb, data=hills)
summary(lm1dc)
anova(lm1dc)
attach(hills)
plot(dist,climb)
lmcd ~ lm(climb ~ dist, data=hills)
summary(lmcmd)
lmcd <- lm(climb ~ dist, data=hills)
summary(lmcmd)
summary(lmcd)
abline(lmcd)
plot(lmcd)
plot(dist, lmcd$residuals)
plot(lmcd$residuals, lm1d$residuals)
dir()
suppressMessages(library('nonlinearTseries'))library('plot3D')# by default, the simulation creates a RGL plot of the system's phase spacelor = lorenz(do.plot = F)# let's plot the phase space of the simulated lorenz systemscatter3D(lor$x, lor$y, lor$z,main = "Lorenz's system phase space",col = 1, type="o",cex = 0.3)
?scatter3D
?lorenz
lo1 <- lor[1:10,]
str(lor)
lo1 <- lor[1:10]
scatter3D(lo1$x, lo1$y, lo1$z, col="yellow", type="o",cex = 0.3)
str(lo1)
?rgb
rgb(1,1,1,0.5)
scatter3D(lor$x, lor$y, lor$z,main = "Lorenz's system phase space", col=rgb(1,1,1,0.5),type="o",cex = 0.3)
scatter3D(lor$x, lor$y, lor$z,main = "Lorenz's system phase space", col=rgb(1,0,0,0.5),type="o",cex = 0.3)
scatter3D(lor$x, lor$y, lor$z,main = "Lorenz's system phase space", col=rgb(1,0,0,0.2),type="o",cex = 0.3)
str(lor)
?lorenz
?timeLag
?estimateEmbeddingDi
?estimateEmbeddingDim
source('~/Desktop/lutz/MyNormalQQPlot.R', chdir = TRUE)
source('~/Desktop/lutz/MyNormalQQPlot_Demo.R', chdir = TRUE)
IQR
?IQR
rows <- 3#
cols <- 3#
n <- 100#
oldpar <- par(mfrow=c(rows,cols))#
#
x <-  matrix( rnorm(n*rows*cols), nrow=n)#
panelfun <- function(xx){plot(ecdf(xx)))}#
#
apply(x, 2, panelfun)#
#
par(oldpar)
rows <- 3#
cols <- 3#
n <- 100#
oldpar <- par(mfrow=c(rows,cols))#
#
x <-  matrix( rnorm(n*rows*cols), nrow=n)#
panelfun <- function(xx){plot(ecdf(xx))}#
#
apply(x, 2, panelfun)#
#
par(oldpar)
panelfun <- function(xx){qqnorm(xx)}
apply(x, 2, panelfun)
oldpar <- par(mfrow=c(rows,cols))
apply(x, 2, panelfun)
rows <- 3#
cols <- 3#
n <- 100#
oldpar <- par(mfrow=c(rows,cols))#
#
x <-  matrix( rnorm(n*rows*cols), nrow=n)#
panelfun <- function(xx){qqnorm(xx, main="")}#
#
apply(x, 2, panelfun)#
#
par(oldpar)
rows <- 3#
cols <- 3#
n <- 35#
oldpar <- par(mfrow=c(rows,cols))#
#
x <-  matrix( rnorm(n*rows*cols), nrow=n)#
panelfun <- function(xx){qqnorm(xx, main="")}#
#
apply(x, 2, panelfun)#
#
par(oldpar)
qp <- function(n=35){}#
rows <- 3#
cols <- 3#
#n <- 35#
oldpar <- par(mfrow=c(rows,cols))#
#
x <-  matrix( rnorm(n*rows*cols), nrow=n)#
panelfun <- function(xx){qqnorm(xx, main="")}#
#
apply(x, 2, panelfun)#
#
par(oldpar)#
}
qp()
qp <- function(n=35){#
rows <- 3#
cols <- 3#
#n <- 35#
oldpar <- par(mfrow=c(rows,cols))#
#
x <-  matrix( rnorm(n*rows*cols), nrow=n)#
panelfun <- function(xx){qqnorm(xx, main="")}#
#
apply(x, 2, panelfun)#
#
par(oldpar)#
}#
#
qp()
qp()
qp(10)
qp()
qp(100)
qp(200)
qp <- function(n=35){#
rows <- 3#
cols <- 3#
#n <- 35#
oldpar <- par(mfrow=c(rows,cols))#
#
x <-  matrix( rnorm(n*rows*cols), nrow=n)#
#panelfun <- function(xx){qqnorm(xx, main="")}#
panelfun <- function(xx){hist(xx, main="")}#
#
apply(x, 2, panelfun)#
#
par(oldpar)#
}
qp(200)
qp()
qp <- function(n=35){#
rows <- 3#
cols <- 3#
#n <- 35#
oldpar <- par(mfrow=c(rows,cols))#
#
x <-  matrix( rnorm(n*rows*cols), nrow=n)#
panelfun <- function(xx){qqnorm(xx, main="")}#
#panelfun <- function(xx){hist(xx, main="")}#
#
apply(x, 2, panelfun)#
#
par(oldpar)#
}
qp()
ecdf
plot(ecdf( runif(10) ))
plot(runi(100))
plot(runif(100))
plot(sin(1:100))
plot(runif(100))
setwd("/Users/gs/projects/rforge/rhrv/gs/Rnw_out"); Sweave(file= "../Rnw/recurrence.Rnw", output="recurrence.tex", debug=TRUE, eps=FALSE, figs.only=FALSE);
